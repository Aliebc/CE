<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8">
        <title>计算经济学工具箱</title>
        <script src="__CDN_JQUERY__"></script>
        <script src="__CDN_LAYER__"></script>
        <script>
            tesm="";
            apid={
                "yl":"__DOMAIN__getd/",
                "swif":"__DOMAIN__swif/",
                "summary":"__DOMAIN__dsummary/",
                "summary2":"__DOMAIN__xsummary/",
                "summary3":"__DOMAIN__xsummary2/",
                "hgt":"__DOMAIN__lm3/",
                "corr":"__DOMAIN__corr/",
                "xcorr":"__DOMAIN__xcorr/",
                "fl":"__DOMAIN__dtype/",
                "hist":"__DOMAIN__dhist/",
                "ols":"__DOMAIN__ols/",
                "olss":"__DOMAIN__olss/",
                "olsse":"__DOMAIN__olsse/",
                "down":"__DOMAIN__getf/",
                "version":"__DOMAIN__version/",
                "probit":"__DOMAIN__binary_probit/",
                "logit":"__DOMAIN__binary_logit/",
                "select_simple":"__DOMAIN__select_simple/",
                "select_advance":"__DOMAIN__select_advance/",
                "del":"__DOMAIN__delf/",
                "test_mean":"__DOMAIN__dtest_mean/",
                "test_ks":"__DOMAIN__dtest_ks/",
                "test_norm":"__DOMAIN__dtest_norm/",
                "test_anova":"__DOMAIN__dtest_anova/",
                "test_std":"__DOMAIN__dtest_std/",
                "est_mean":"__DOMAIN__dest_mean/",
                "est_var":"__DOMAIN__dest_var/",
                "est_varr":"__DOMAIN__dest_varr/"
            };

            

            function getQueryVariable(variable){
                var query = window.location.search.substring(1);
                var vars = query.split("&");
                for (var i=0;i<vars.length;i++) {
                        var pair = vars[i].split("=");
                        if(pair[0] == variable){return pair[1];}
                }
                return(false);
            }

            function Json2Table_describe(jso){
                esth={
                    'count':'Obs.',
                    'mean':'Mean',
                    '50%':'Median',
                    'std':'Std Dev.',
                    'min':'Min',
                    'max':'Max'
                };
                esth2={
                    'count':['Obs.',null],
                    'mean':['Mean',3],
                    '50%':['Median',3],
                    'std':['Std Dev.',3],
                    'min':['Min',null],
                    'max':['Max',null]
                };
                estr="<table style='text-align:center;border:0;border-collapse:collapse;font-size:14px'><thead style='border-bottom:1px solid black;border-top:2px solid black'><th style='text-align:left;width:120px'>Variable</th>";
                for (k in esth){
                    estr+=`<th style='width:80px'>${esth[k]}</th>`;
                }
                estr+=`</thead>`;
                for(y in jso){
                    estr+=`<tr><td style='text-align:left;width:120px'>${y}</td>`;
                    for(i in jso[y]){
                        if(esth[i]){
                            estr+=`<td>${esth2[i][1]?jso[y][i].toFixed(esth2[i][1]):jso[y][i]}</td>`;
                        }
                    }
                    estr+=`<tr>`;
                }
                estr=estr.substr(0,estr.length-4)+"<tr style='border-bottom:2px solid black;'>";
                estr+=`</table><p>选中表格并复制后可直接粘贴到Word!</p>`;
                return estr;
            }

            function download_table(uid,f_suffix){
                $("#lhref").attr("href",apid['down']+`?uid=${uid}&f_suffix=${f_suffix}`);
                document.getElementById("lhref").click();
            }

            function Json2Table_olss(jso){
                estr="<div id='xolss' style='margin:40px;'><table id='corrtable' style='border:0;border-collapse:collapse;' class='corrtable'><thead style='border-bottom:1px solid black;border-top:2px solid black;'><th style='width:100px'></th>";
                let r=0;
                let count=jso["count"];
                while(r<count){
                    r++;
                    estr+=`<th style='width:100px'>(${r})</th>`;
                }
                estr+=`</thead>`;
                r=0;
                estr+=`<tr><td>被解释变量</td>`;
                for(i in jso['OLSList']){
                    estr+=`<td>${jso['OLSList'][i]['argu_i']}</td>`;
                }
                estr+="<tr>";
                let pstr=function(pval){
                    esq="";
                    if(pval<=0.01){
                        esq="***";
                    }else if(pval<=0.05){
                        esq="**";
                    }else if(pval<=0.1){
                        esq="*";
                    }
                    return "<sup>"+esq+"</sup>";
                }
                jso["ArgeList"].push("const");
                for(arge in jso["ArgeList"]){
                    estr+=`<tr><td>${jso["ArgeList"][arge]}</td>`;
                    for(i in jso['OLSList']){
                        estr+=`
                        <td>${jso["OLSList"][i]["Result"]['coeff'][jso["ArgeList"][arge]]?jso["OLSList"][i]["Result"]['coeff'][jso["ArgeList"][arge]].toFixed(3)+pstr(jso["OLSList"][i]["Result"]['pvalue'][jso["ArgeList"][arge]]):""}<br>
                        ${jso["OLSList"][i]["Result"]['std_err'][jso["ArgeList"][arge]]?'('+jso["OLSList"][i]["Result"]['std_err'][jso["ArgeList"][arge]].toFixed(3)+')':""}</td>
                        `;
                    }
                    r++;
                    estr+=`<tr>`;
                }
                estr+=`<tr><td>观测值</td>`;
                    for(i in jso['OLSList']){
                        estr+=`
                        <td>${jso["OLSList"][i]["Result"]['n']}</td>
                        `;
                    }
                estr+=`<tr>`;
                estr+=`<tr style='border-bottom:2px solid black'><td>R<sup>2</sup></td>`;
                    for(i in jso['OLSList']){
                        estr+=`
                        <td>${jso["OLSList"][i]["Result"]['r2'].toFixed(3)}</td>
                        `;
                    }
                estr+=`<tr></table><p>注:表中***,**,*分别代表在1%,5%,10%统计意义上显著<p>选中表格并复制后可直接粘贴到Word!</p></p></div>`;
                
                return estr;
            }

            function Json2Table_olsse(jso){
                estr="<div id='xolss' style='margin:40px;'><table id='corrtable' style='border:0;border-collapse:collapse;' class='corrtable'><thead style='border-bottom:1px solid black;border-top:2px solid black;'><th style='width:100px'></th>";
                let r=0;
                let count=jso["count"];
                while(r<count){
                    r++;
                    estr+=`<th style='width:100px'>(${r})</th>`;
                }
                estr+=`</thead>`;
                r=0;
                estr+=`<tr><td>被解释变量</td>`;
                for(i in jso['OLSList']){
                    estr+=`<td>${jso['OLSList'][i]['argu_i']}</td>`;
                }
                estr+="<tr>";
                let pstr=function(pval){
                    esq="";
                    if(pval<=0.01){
                        esq="***";
                    }else if(pval<=0.05){
                        esq="**";
                    }else if(pval<=0.1){
                        esq="*";
                    }
                    return "<sup>"+esq+"</sup>";
                }
                jso["ArgeList"].push("const");
                for(arge in jso["ArgeList"]){
                    estr+=`<tr><td>${jso["ArgeList"][arge]}</td>`;
                    for(i in jso['OLSList']){
                        estr+=`
                        <td>${jso["OLSList"][i]["Result"]['coeff'][jso["ArgeList"][arge]]?jso["OLSList"][i]["Result"]['coeff'][jso["ArgeList"][arge]].toFixed(3)+pstr(jso["OLSList"][i]["Result"]['pvalue'][jso["ArgeList"][arge]]):""}<br>
                        ${jso["OLSList"][i]["Result"]['std_err'][jso["ArgeList"][arge]]?'('+jso["OLSList"][i]["Result"]['std_err'][jso["ArgeList"][arge]].toFixed(3)+')':""}</td>
                        `;
                    }
                    r++;
                    estr+=`<tr>`;
                }
                estr+=`<tr><td>时间固定效应</td>`;
                    for(i in jso['OLSList']){
                        estr+=`
                        <td>${jso["OLSList"][i]["Result"]['time_effect']?"是":"否"}</td>
                        `;
                    }
                estr+=`<tr>`;
                    estr+=`<tr><td>个体固定效应</td>`;
                    for(i in jso['OLSList']){
                        estr+=`
                        <td>${jso["OLSList"][i]["Result"]['entity_effect']?"是":"否"}</td>
                        `;
                    }
                estr+=`<tr>`;
                estr+=`<tr><td>观测值</td>`;
                    for(i in jso['OLSList']){
                        estr+=`
                        <td>${jso["OLSList"][i]["Result"]['n']}</td>
                        `;
                    }
                estr+=`<tr>`;
                estr+=`<tr style='border-bottom:2px solid black'><td>R<sup>2</sup></td>`;
                    for(i in jso['OLSList']){
                        estr+=`
                        <td>${jso["OLSList"][i]["Result"]['r2'].toFixed(3)}</td>
                        `;
                    }
                estr+=`<tr></table><p>注:表中***,**,*分别代表在1%,5%,10%统计意义上显著<p>选中表格并复制后可直接粘贴到Word!</p></p></div>`;
                
                return estr;
            }

            function Json2Table_xcorr(jso){
                estr="<div id='xcorrc'><table id='corrtable' style='border:0;border-collapse:collapse;' class='corrtable'><thead style='border-bottom:1px solid black'><th style='width:100px'>Variable</th>";
                let r=0;
                for (k in jso){
                    r++;
                    estr+=`<th style='width:100px'>(${r})</th>`;
                }
                estr+=`</thead>`;
                r=0;
                for(y in jso){
                    r++;
                    estr+=`<tr><td>(${r})${y}</td>`;
                    let r2=0;
                    for(i in jso[y]){
                        r2++;
                        if(r<r2){
                            continue;
                        }
                        esq="";
                        if(jso[y][i][1]<=0.01){
                            esq="***";
                        }else if(jso[y][i][1]<=0.05){
                            esq="**";
                        }else if(jso[y][i][1]<=0.1){
                            esq="*";
                        }
                        if(r==r2){
                            estr+=`<td>1.0000</td>`;
                        }else{
                            estr+=`<td>${jso[y][i][0].toFixed(4)}<sup>${esq}</sup></td>`;
                        }
                    }
                    estr+=`<tr>`;
                }
                estr+=`</table><hr><span>注:表中***,**,*分别代表在1%,5%,10%统计意义上显著</span><p>选中表格并复制后可直接粘贴到Word!</p></div>`;
                return estr;
            }

            function olss_query(coo){
                estr=`<input id='olss-count' value='${coo}' hidden='true'>`;
                let r=0;
                while(r<coo){
                    r++;
                    s_cont="";
                    s_cont2="<option value='null'>请选择</option>";
                    for(key in keys){
                        if(keys_t[keys[key]].match(/(i|f)/)){
                            s_cont+=`<input type='checkbox' value='${keys[key]}' class='ckeys' olss-arge="${r}">${keys[key]}</option><br>`;
                            s_cont2+=`<option>${keys[key]}</option>`;
                        }
                    }
                    estr+=`
                    <hr>
                    <span>OLS${r}</span><br>
                    选择被解释变量:<select keys='true' id='olss_argi${r}' olss-argi="${r}">${s_cont2}</select><br><br>
                    选择解释变量:<button class='all_c' olss="${r}" onclick=''>全选</button><br><div id='explain' keys='true'>${s_cont}</div>
                    <hr>
                    `;
                }
                return estr;
            }

            function olsse_query(coo,argue){
                estr=`<input id='olss-count' value='${coo}' hidden='true'>`;
                estr+=`<input id='olss-argue' value='${JSON.stringify(argue)}' hidden='true'>`;
                let r=0;
                while(r<coo){
                    r++;
                    s_cont="";
                    s_cont2="<option value='null'>请选择</option>";
                    for(key in keys){
                        if(keys_t[keys[key]].match(/(i|f)/)){
                            s_cont+=`<input type='checkbox' value='${keys[key]}' class='ckeys' olss-arge="${r}">${keys[key]}</option><br>`;
                            s_cont2+=`<option>${keys[key]}</option>`;
                        }
                    }
                    estr+=`
                    <hr>
                    <span>OLS${r}</span><br>
                    选择被解释变量:<select keys='true' id='olss_argi${r}' olss-argi="${r}">${s_cont2}</select><br><br>
                    选择解释变量:<button class='all_c' olss="${r}" onclick=''>全选</button><br><div id='explain' keys='true'>${s_cont}</div>
                    <div>时间固定效应:<input olss="${r}" type='radio' name="olss-t-${r}" value='yes'>是<input olss="${r}" type='radio' name="olss-t-${r}" value=''>否<br>
                        个体固定效应:<input olss="${r}" type='radio' name="olss-e-${r}" value='yes'>是<input olss="${r}" type='radio' name="olss-e-${r}" value=''>否</div>
                    <hr>
                    `;
                }
                return estr;
            }

            function olss_query_analyse(){
                let argr={};
                let count=parseInt($("#olss-count").val());
                let r=0;
                argr['count']=count;
                argr['argus']=[];
                while(r<count){
                    r++;
                    s={};
                    s['argu_i']=$(`select[olss-argi="${r}"]`).val();
                    s['argu_e']=[];
                    $(`input.ckeys[olss-arge=${r}]:checked`).each(function(){
                        s['argu_e'].push($(this).val());
                    });
                    
                    argr['argus'].push(s);
                }
                $("#argu1").val(JSON.stringify(argr));
                return true;
            }

            function olsse_query_analyse(){
                let argr={};
                let count=parseInt($("#olss-count").val());
                let argue=JSON.parse($("#olss-argue").val());
                let r=0;
                argr['count']=count;
                argr['argus']=[];
                argr['argue']=argue;
                while(r<count){
                    r++;
                    s={};
                    s['argu_i']=$(`select[olss-argi="${r}"]`).val();
                    s['argu_e']=[];
                    $(`input.ckeys[olss-arge=${r}]:checked`).each(function(){
                        s['argu_e'].push($(this).val());
                    });
                    s['time_effect']=Boolean($(`input[name=olss-t-${r}]:checked`).val());
                    s['entity_effect']=Boolean($(`input[name=olss-e-${r}]:checked`).val());
                    argr['argus'].push(s);
                }
                $("#argu1").val(JSON.stringify(argr));
                return true;
            }

            function form2JsonString(formId) {
                var paramArray = $('#' + formId).serializeArray();  
                var jsonObj={};  
                $(paramArray).each(function(){
                    try{
                        jsonObj[this.name]=JSON.parse(this.value);
                    }catch{
                        jsonObj[this.name]=this.value;  
                    }
                });  
                return JSON.stringify(jsonObj);
            }

            function toggleFullScreen() {
                if (!document.fullscreenElement && // alternative standard method
                    !document.mozFullScreenElement && !document.webkitFullscreenElement) {// current working methods
                    if (document.documentElement.requestFullscreen) {
                        document.documentElement.requestFullscreen();
                    } else if (document.documentElement.mozRequestFullScreen) {
                        document.documentElement.mozRequestFullScreen();
                    } else if (document.documentElement.webkitRequestFullscreen) {
                        document.documentElement.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);
                    }
                } else {
                    if (document.cancelFullScreen) {
                        document.cancelFullScreen();
                    } else if (document.mozCancelFullScreen) {
                        document.mozCancelFullScreen();
                    } else if (document.webkitCancelFullScreen) {
                        document.webkitCancelFullScreen();
                    }
                }
            }

            function img_std(aim,cont,api_name){
                layer.open({title:$(aim.target).html(),content:cont,
                    yes:function(e){
                    call_img(api_name);
                }
                });
                $("select[keys='true']").append(`<option value='null'>请选择</option>`);
                for(key in keys){
                    $("select[keys='true']").append(`<option>${keys[key]}</option>`);
                }
                $("[keys='true']").change(function(e){
                $(`#${$(e.target).attr('v_name')}`).val($(e.target).val());
                });
            }

            function api_std(aim,cont,api_name,func,func2=function(){return 0}){
                layer.open({title:$(aim.target).html(),content:cont,
                    yes:function(ind){
                        func2();
                    call_api(api_name,function(e){
                        
                        if(e['respCode']==0){
                            func(e);
                        }else{
                            layer.msg(e['errMsg']);
                        }
                    });
                    layer.close(ind);
                }
                });
                $("select[keys='true']").append(`<option value='null'>请选择</option>`);
                for(key in keys){
                    $("select[keys='true']").append(`<option>${keys[key]}</option>`);
                }
                $("[keys='true']").change(function(e){
                $(`#${$(e.target).attr('v_name')}`).val($(e.target).val());
                });
            }

            function call_img(api_str){
                $("#argu1").val($("#argu1").val().replace(/'/g,'UNESCAPED1'));
                layer.open({"type":0,"content":`<img id='dimg' onerror="layer.closeAll();layer.msg('图片加载出错了,请重新调整参数！');" src='__DOMAIN__${api_str}/?${$.param($("#jk").serializeArray()).replace(/UNESCAPED1/g,"%27")}'>`,area:['80%','100%'],"title":"图片","btn":['保存','关闭'],"yes":function(ind){
                    $("#lhref").attr('href',$("#dimg").attr('src')+"&dl=1");
                    document.getElementById("lhref").click();
                }});
            }

            function call_api(id,callback){
                var f;
                $.ajax({
                        url:apid[id],
                        type:"POST",
                        data:form2JsonString("jk"),
                        dataType:"json",
                        processData:false,
                        beforeSend:function(){
                            f=layer.msg('已提交,等待中..', {
                                icon: 16
                                ,shade: 0.3
                                ,time: false
                            });
                        },
                        xhr:function(){
                            var xhr = new XMLHttpRequest();
                            return xhr;
                        },
                        success:function(dta){
                            layer.close(f);
                            callback(dta);
                        },
                        error:function(e,c,t){
                            layer.close(f);
                            alert("请求API时发生本地错误,原因:"+c);
                        }
                });
            }

            keys=[];
            keys_t={};

            function copyright(){
                call_api("version",function(e){
                    layer.open({"title":"关于","content":"CE-Toolbox __CET_VERSION__<br>计算经济学工具箱(CE-API内置图形交互界面)<br>CE-Toolbox作者:AliebcX<br>&copy; 2021-__YEAR__ CE-Toolbox All rights reserved.<hr>CE-API "+e['respData']['version']+"<br>CE-API由清华大学经管学院刘潇老师助研项目组共同维护<br>CE-API当前配置在__DOMAIN__<br><a href='https://github.com/Aliebc/CE/graphs/contributors'>查看贡献者</a><br>&copy; 2021-__YEAR__ CE-API All rights reserved.<hr>CE版本以CE-API版本为主<br>本项目在<a href='https://github.com/Aliebc/CE' target='_blank'>GitHub</a>开源,使用本项目需要遵守相关协议和__REGION__相关法律法规",maxHeight:'100%'});
                });
            }

            function table2_show(api_name){
                call_api(api_name,function(cons){
                    if(cons['respCode']==0){
                        window.open("__DOMAIN__?uid="+cons['respData']['uid']+"&f_suffix=.xlsx");
                    }else{
                        layer.msg(cons['errMsg']);
                    }
                });
            }

            function table_init(){
                call_api("yl",function(cons){
                    if(cons['respCode']==0){
                        $("[step='1']").hide();
                        $("[step='2']").show();
                        $("#table-main-head,#table-main-body").html("");
                        keys=new Array();
                        if(cons['respData']['DataList']==0){
                            $("#table-main-head").append(`<th table-main-th-key2='Row' cked='false'>Empty Set</th>`);
                        }else{
                            $("#table-main-head").append(`<th table-main-th-key2='Row' cked='false'>Row</th>`);
                        }
                        
                        for(key in cons['respData']['DataList'][0]){
                            $("#table-main-head").append(`<th table-main-th-key='${key}' table-main-th-type='${cons['respData']['Type'][key]['name']}' cked='false'>${key}</th>`);
                            keys.push(key);
                            keys_t[key]=cons['respData']['Type'][key]['kind'];
                        }
                        for(x in cons['respData']['DataList']){
                            $("#table-main-body").append(`<tr id='table-main-tr-${x}'></tr>`);
                            $(`#table-main-tr-${x}`).append(`<td table-main-td-key='Row'>${parseInt(x)+1}</td>`);
                            for(key in keys){
                                $(`#table-main-tr-${x}`).append(`<td table-main-td-key='${keys[key]}' table-main-td-value='${cons['respData']['DataList'][x][keys[key]]}' table-main-td-type='${typeof(cons['respData']['DataList'][x][keys[key]])}' class='std-td'>${cons['respData']['DataList'][x][keys[key]]}</td>`);
                            }
                        }
                        $("#table1").show();
                        $("#wait-info").remove();
                        $("[table-main-td-type='string']").css("color","blue");
                        $("#default-info").html(`数据基本信息<br>共${cons['respData']['DataList'].length}条记录<br>共${keys.length}个键值<br>`);
                        $("[table-main-td-value='null']").css('background','red');
                    }else{
                        layer.msg("数据不存在,或读取数据失败");
                        $("[step='1']").show();
                        $("#jdt").hide();
                        $("[step='2']").hide();
                    }
                    $("[table-main-th-key]").click(function(e){
                        key=$(e.target).attr("table-main-th-key");
                        if($(e.target).attr('cked')=='false'){
                            $(`[table-main-td-key='${key}'][table-main-td-value!='null']`).css("background","grey");
                            $(e.target).attr('cked','true');
                        }else{
                            $(e.target).attr('cked','false');
                            key=$(e.target).attr("table-main-th-key");
                            $(`[table-main-td-key='${key}'][table-main-td-value!='null']`).css("background","white");
                        }
                    });

                    $("[table-main-th-key]").contextmenu(function(e){
                        e.preventDefault();
                        $("body").append(`<div id='th-contextmenu' class='nav-top-option-menu'></div>`);
                        $("#th-contextmenu").css({"left":e.pageX,"top":e.pageY});
                        $("#th-contextmenu").append(`<div id='th-contextmenu-info1' class='nav-top-option-menu-in'>当前列:${$(e.target).attr('table-main-th-key')}</div><div id='th-contextmenu-info2' class='nav-top-option-menu-in'>类型:${$(e.target).attr('table-main-th-type')}</div><hr>`);
                        $("#th-contextmenu").append(`<div id='th-contextmenu-summary' class='nav-top-option-menu-in' menu-key='${$(e.target).attr('table-main-th-key')}'>描述性统计</div>`);
                        $("#th-contextmenu").append(`<div id='th-contextmenu-type' class='nav-top-option-menu-in' menu-key='${$(e.target).attr('table-main-th-key')}'>分类统计</div><hr>`);
                        $("#th-contextmenu").append(`<div id='th-contextmenu-ImgDensity' img-api='dimg_density' class='nav-top-option-menu-in' menu-key='${$(e.target).attr('table-main-th-key')}'>概率密度图</div>`);
                        $("#th-contextmenu").append(`<div id='th-contextmenu-ImgDensity2' img-api='dimg_density' class='nav-top-option-menu-in' menu-key='${$(e.target).attr('table-main-th-key')}'>概率密度图(分类)</div>`);
                        $("#th-contextmenu").append(`<div id='th-contextmenu-ImgHist' img-api='dimg_hist' class='nav-top-option-menu-in' menu-key='${$(e.target).attr('table-main-th-key')}'>直方图</div>`);
                        $("#th-contextmenu").append(`<div id='th-contextmenu-ImgLine' img-api='2' class='nav-top-option-menu-in' menu-key='${$(e.target).attr('table-main-th-key')}'>折线图</div>`);
                        $("#th-contextmenu").mouseleave(function(e){$("#th-contextmenu").remove()});

                        $("#th-contextmenu-ImgDensity,#th-contextmenu-ImgHist").click(function(e){
                            $("#argu1").val($(e.target).attr('menu-key'));
                            call_img($(e.target).attr('img-api'));
                        });

                        $("#th-contextmenu-ImgLine").click(function(e){
                            $("#argu2").val($(e.target).attr('menu-key'));
                            layer.open({title:"折线图图接口",content:`
                            <div>
                            选择分类(横轴)变量:<select keys='true' id='explain_v1' v_name='argu1'></select><br>
                            </div>
                            `,
                            yes:function(e){
                                call_img("dimg_line");
                            }
                            });
                            $("select[keys='true']").append(`<option value='null'>请选择</option>`);
                            for(key in keys){
                                $("select[keys='true']").append(`<option>${keys[key]}</option>`);
                            }
                            $("select[keys='true']").change(function(e){
                                $(`#${$(e.target).attr('v_name')}`).val($(e.target).val());
                            });
                        });

                        $("#th-contextmenu-ImgDensity2").click(function(e){
                            $("#argu1").val($(e.target).attr('menu-key'));
                            layer.open({title:"分类概率密度图接口",content:`
                            <div>
                            选择分类变量:<select keys='true' id='explain_v2' v_name='argu2'></select><br>
                            </div>
                            `,
                            yes:function(e){
                                call_img("dimg_density_type");
                            }
                            });
                            $("select[keys='true']").append(`<option value='null'>请选择</option>`);
                            for(key in keys){
                                $("select[keys='true']").append(`<option>${keys[key]}</option>`);
                            }
                            $("select[keys='true']").change(function(e){
                                $(`#${$(e.target).attr('v_name')}`).val($(e.target).val());
                            });
                        });

                        $("#th-contextmenu-summary").click(function(e){
                            $("#argu1").val($(e.target).attr('menu-key'));
                            call_api("summary",function(e){
                                if(e['respCode']!=0){
                                    layer.msg(e['errMsg']);
                                }else{
                                    cons_t="";
                                    for(key3 in e['respData']){
                                        cons_t+=`${key3}:${e['respData'][key3]}<br>`;
                                    }
                                    layer.open({title:"描述性统计结果",content:cons_t});
                                }
                                
                            });
                        });

                        $("#th-contextmenu-type").click(function(e){
                            $("#argu1").val($(e.target).attr('menu-key'));
                            call_api("fl",function(e){
                                if(e['respCode']!=0){
                                    layer.msg(e['errMsg']);
                                }else{
                                    cons_t="";
                                    for(key3 in e['respData']){
                                        cons_t+=`${key3}:${e['respData'][key3]}<br>`;
                                    }
                                    layer.open({title:"分类统计结果",content:cons_t});
                                }
                                
                            });
                        });

                    });


                });
            }

            $(document).ready(function(){
                $("#table-main,#nav-left").click(function(){
                    $(".nav-top-option-menu").remove();
                })
                $("[step][step!='1']").hide();
                $("#go1").click(function(){
                    $("#file0").click();
                });

                $("#isuid").click(function(e){
                    layer.open({"content":"UID:<input type='text' placeholder='UID' users='true' v_name='uid'><br>数据文件种类:<br><select users='true' v_name='f_suffix'><option value='null'>请选择</option><option value='.xls'>Excel 2003(*.xls)</option><option value='.xlsx'>Excel 2010(*.xlsx)</option><option value='.dta'>STATA(*.dta)</option><option value='.csv'>CSV with ',' and UTF-8(*.csv)</option></select>","title":"使用UID查看数据"
                    ,"yes":function(ind){
                        table_init();
                        layer.close(ind);
                    }});
                    $("[users='true']").change(function(e){
                        $(`#${$(e.target).attr('v_name')}`).val($(e.target).val());
                    });
                });

                $("#file0").change(function(){
                    if($("#file0")[0].files[0].name.match(/.*.(dta|xls|xlsx|csv)/)){
                        layer.msg($("#file0")[0].files[0].name);
                        f0=new FormData();
                        f0.append('file',$("#file0")[0].files[0]);
                        $.ajax({
                        url:"__DOMAIN__filer/",
                        type:"POST",
                        processData: false,
                        contentType: false,
                        data:f0,
                        beforeSend:function(){
                            
                            $("#jdt").show();
                        },
                        xhr:function(){
                            var xhr = new XMLHttpRequest();
                            xhr.upload.addEventListener('progress',function(e){
                                progressRate = ((e.loaded / e.total) * 100).toFixed(2) + '%';
                                $("#jdt2").css("width",progressRate);
                            });
                            return xhr;
                        },
                        success:function(cod){
                            if(cod['respCode']==0){
                                layer.msg("上传完成");
                                $("#f_suffix").val(cod['respData']['f_suffix']);
                                $("#uid").val(cod['respData']['uid']);
                                $("#f_name").val(cod['respData']['f_name']);
                                $("[step='1']").hide();
                                $("[step][step!='1']").show();
                                $("#jdt2").css("width",'0%');
                                table_init();
                            }else{
                                alert("上传失败-错误原因:"+cod['errMsg']);
                            }
                        },
                        error:function(e){
                            alert("XHR错误,请检查配置或联系网站管理员");
                        }
                        });
                    }else{
                        layer.msg("文件后缀名不合规,请重新选择");
                        $("#jdt").hide();
                    }
                });

            });

            $(document).ready(function(){
                if(getQueryVariable("uid")&&getQueryVariable("f_suffix")){
                    $("#uid").val(getQueryVariable("uid"));
                    $("#f_suffix").val(getQueryVariable("f_suffix"));
                    table_init();
                }
                $("#nav-top-file").click(function(e){
                    $(".nav-top-option-menu").hide();
                    if($("#nav-top-file-menu").length==0){
                        $("body").append(`<div id='nav-top-file-menu' class='nav-top-option-menu'></div>`);
                        $("#nav-top-file-menu").css({"top":$("#nav-top").height(),"left":$(e.target).offset().left});
                        $("#nav-top-file-menu").append(`<div id='nav-top-file-menu-uid' class='nav-top-option-menu-in'>查看UID</div>`);
                        $("#nav-top-file-menu").append(`<div id='nav-top-file-menu-save' class='nav-top-option-menu-in'>下载数据表</div>`);
                        $("#nav-top-file-menu").append(`<div id='nav-top-file-menu-switch' class='nav-top-option-menu-in'>转换数据表</div>`);
                        $("#nav-top-file-menu").append(`<div id='nav-top-file-menu-open' class='nav-top-option-menu-in'>打开新文件</div><hr>`);
                        $("#nav-top-file-menu").append(`<div id='nav-top-file-menu-share' class='nav-top-option-menu-in'>复制分享链接</div>`);
                        $("#nav-top-file-menu").append(`<div id='nav-top-file-menu-remove' class='nav-top-option-menu-in'>删除数据</div>`);
                        $("#nav-top-file-menu").append(`<div id='nav-top-file-menu-reload' class='nav-top-option-menu-in'>回到首页</div>`);
                        $("#nav-top-file-menu-remove").click(function(e){
                            if(confirm("确认后将立即删除:\n1.本UID关联的数据\n2.本UID的分享链接")==true){
                                call_api("del",function(d){
                                    if(d['respCode']==0){
                                        $("html").html(`成功删除,<a href='__DOMAIN__'>回到首页</a>`);
                                    }else{
                                        layer.msg(d['errMsg']);
                                    }
                                });
                            }else{

                            }
                        });
                        $("#nav-top-file-menu-switch").click(function(e){
                            layer.open({title:"转换数据表",content:`<div>请选择转换成的数据表类型:<select keys='true' v_name='argu1'><option value='null'>请选择</option><option value='.xls'>Excel 2003(*.xls)</option><option value='.xlsx'>Excel 2010(*.xlsx)</option><option value='.dta'>STATA(*.dta)</option><option value='.csv'>CSV with ',' and UTF-8(*.csv)</option></select></div>`,yes:ind=>{
                                call_api("swif",e=>{
                                    if(e['respCode']==0){
                                        window.open("__DOMAIN__?uid="+e['respData']['uid']+"&f_suffix="+e['respData']['f_suffix']);
                                    }else{
                                        layer.msg(e['errMsg']);
                                    }
                                });
                            }});
                            $("select[keys='true']").change(function(e){
                                $(`#${$(e.target).attr('v_name')}`).val($(e.target).val());
                            });
                        });
                        $("#nav-top-file-menu").mouseleave(function(e){
                            $("#nav-top-file-menu").hide();
                        });
                        $("#nav-top-file-menu-reload").click(function(e){
                            window.location.href="__DOMAIN__";
                        });
                        $("#nav-top-file-menu-share").click(function(e){
                            navigator.clipboard.writeText(`__DOMAIN__?uid=${$("#uid").val()}&f_suffix=${$("#f_suffix").val()}`);
                            layer.msg("已复制到剪切板");
                        })
                        $("#nav-top-file-menu-uid").click(function(){
                            layer.open({content:$("#uid").val(),title:"UID","btn":['确定','复制'],"btn2":function(ind){
                                navigator.clipboard.writeText($("#uid").val());
                                layer.close(ind);
                                layer.msg("已复制到剪切板");
                            }});
                        });
                        $("#nav-top-file-menu-property").click(function(){
                            layer.open({title:"属性",content:"User-Agent: "+navigator.userAgent+"<br>Platform: "+navigator.platform});
                        });
                        $("#nav-top-file-menu-open").click(function(){
                            $("#file0").click();
                        });
                        $("#nav-top-file-menu-close").click(function(){
                            $("html").remove();
                        });
                        $("#nav-top-file-menu-save").click(function(e){
                            $("#lhref").attr('href',apid['down']+"?"+$.param($("#jk").serializeArray()))
                            document.getElementById("lhref").click();
                        });
                    }else{
                        $("#nav-top-file-menu").show();
                    }
                });

                $("#nav-top-view").click(function(e){
                    $(".nav-top-option-menu").hide();
                    if($("#nav-top-view-menu").length==0){
                        $("body").append(`<div id='nav-top-view-menu' class='nav-top-option-menu'></div>`);
                        $("#nav-top-view-menu").css({"top":$("#nav-top").height(),"left":$(e.target).offset().left});
                        $("#nav-top-view-menu").append(`<div id='nav-top-view-menu-fulls' class='nav-top-option-menu-in'>全屏模式</div>`);
                        //$("#nav-top-view-menu").append(`<div id='nav-top-view-menu-nonull' class='nav-top-option-menu-in'>不突出显示缺失值</div>`);
                        $("#nav-top-view-menu").mouseleave(function(e){
                            $("#nav-top-view-menu").hide();
                        });
                        $("#nav-top-view-menu-fulls").click(function(){
                            toggleFullScreen();
                        });
                        $("#nav-top-view-menu-nonull").click(function(e){
                            $("");
                        })

                    }else{
                        $("#nav-top-view-menu").show();
                    }
                });

                $("#nav-top-api").click(function(e){
                    $(".nav-top-option-menu").hide();
                    if($("#nav-top-api-menu").length==0){
                        $("body").append(`<div id='nav-top-api-menu' class='nav-top-option-menu'></div>`);
                        $("#nav-top-api-menu").css({"top":$("#nav-top").height(),"left":$(e.target).offset().left});
                        $("#nav-top-api-menu").append(`<div id='nav-top-api-menu-corr' class='nav-top-option-menu-in'>相关系数</div>`);
                        $("#nav-top-api-menu").append(`<div id='nav-top-api-menu-xcorr' class='nav-top-option-menu-in'>相关系数矩阵</div>`);
                        $("#nav-top-api-menu").append(`<div id='nav-top-api-menu-xsummary' class='nav-top-option-menu-in'>综合描述性统计</div><hr>`);
                        $("#nav-top-api-menu").append(`<div id='nav-top-api-menu-ols' class='nav-top-option-menu-in'>多元线性回归(OLS)</div>`);
                        $("#nav-top-api-menu").append(`<div id='nav-top-api-menu-olss' class='nav-top-option-menu-in'>绘制回归表格(普通OLS)</div>`);
                        $("#nav-top-api-menu").append(`<div id='nav-top-api-menu-olsse' class='nav-top-option-menu-in'>绘制回归表格(面板固定效应)</div>`);
                        $("#nav-top-api-menu").append(`<div id='nav-top-api-menu-probit' class='nav-top-option-menu-in'>Probit估计</div>`);
                        $("#nav-top-api-menu").append(`<div id='nav-top-api-menu-logit' class='nav-top-option-menu-in'>Logit估计</div>`);
                        $("#nav-top-api-menu").mouseleave(function(e){
                            $("#nav-top-api-menu").hide();
                        });
                        
                        $("#nav-top-api-menu-xsummary2").click(function(){
                            // This
                        });

                        $("#nav-top-api-menu-xsummary").click(function(){
                            s_cont="";
                            for(key in keys){
                                if(keys_t[keys[key]].match(/(i|f)/)){
                                    s_cont+=`<input type='checkbox' value='${keys[key]}' class='ckeys'>${keys[key]}</option><br>`;
                                }
                            }
                            layer.open({title:"综合描述性统计",content:`
                            <div>选择计算变量:<button id='all_c'>全选</button><br><div id='explain' keys='true'>${s_cont}</div>
                            </div>
                            `,
                            yes:function(ind){
                                x3=[];
                                $("input.ckeys:checked").each(function(){
                                    x3.push($(this).val());
                                });
                                $("#argu1").val(JSON.stringify(x3));
                                call_api("summary3",function(e){
                                    x2={};
                                    if(e['respCode']==0){
                                        for(k in x3){
                                        x2[x3[k]]=e['respData']['ValueList'][x3[k]]
                                        }
                                    }
                                    if(e['respCode']==0){
                                        estr=Json2Table_describe(x2);
                                        layer.open({title:"综合描述性统计结果",content:estr,btn:['确定','下载'],btn2:function(i){
                                            download_table(e['respData']['File']['uid'],e['respData']['File']['f_suffix']);
                                        }})
                                    }else{
                                        layer.msg(e['errMsg']);
                                    }
                                });
                            }
                            });
                            $("#all_c").click(function(e){
                                $("input.ckeys").prop('checked','true');
                            });
                        });

                        $("#nav-top-api-menu-xcorr").click(function(){
                            s_cont="";
                            for(key in keys){
                                if(keys_t[keys[key]].match(/(i|f)/)){
                                    s_cont+=`<input type='checkbox' value='${keys[key]}' class='ckeys'>${keys[key]}</option><br>`;
                                }
                            }
                            layer.open({title:"相关系数矩阵",content:`
                            <div>选择计算变量:<button id='all_c'>全选</button><br><div id='explain' keys='true'>${s_cont}</div>
                            </div>
                            `,
                            yes:function(ind){
                                x3=[];
                                $("input.ckeys:checked").each(function(){
                                    x3.push($(this).val());
                                });
                                call_api("xcorr",function(e){
                                    if(e['respCode']==0){
                                        x2={};
                                        try{
                                            for(i in x3){
                                            x2[x3[i]]={}
                                            for (j in x3){
                                                x2[x3[i]][x3[j]]=e['respData']['CorrMartix'][x3[i]][x3[j]]
                                            }
                                        }
                                        }catch(e){
                                            layer.msg("Error:"+e.message);
                                        }
                                        estr=Json2Table_xcorr(x2);
                                        layer.open({title:"相关系数矩阵",content:estr});
                                    }else{
                                        layer.msg(e['errMsg']);
                                    }
                                });
                            }
                            });
                            $("#all_c").click(function(e){
                                $("input.ckeys").prop('checked','true');
                            });
                        });

                        $("#nav-top-api-menu-ols").click(function(e){
                            s_cont="";
                            for(key in keys){
                                if(keys_t[keys[key]].match(/(i|f)/)){
                                    s_cont+=`<input type='checkbox' value='${keys[key]}' class='ckeys'>${keys[key]}</option><br>`;
                                }
                            }
                            layer.open({title:"OLS接口",content:`
                            <div>
                            选择被解释变量:<select keys='true' id='explain_v2' v_name='argu2'></select><br><br>
                            选择解释变量:<button id='all_c'>全选</button><br><div id='explain' keys='true'>${s_cont}</div>
                            </div>
                            `,
                            yes:function(index){
                                x2=[];
                                $("input.ckeys:checked").each(function(){
                                    x2.push($(this).val());
                                });
                                $("#argu1").val(JSON.stringify(x2));
                                call_api("ols",function(e){
                                    try{
                                        if(e['respCode']==0){
                                            layer.close(index);
                                            layer.open({"title":"OLS分析结果","content":e['respData']['s_text'].replace(/\n/g,"<br>").replace(/ /g,"&nbsp;"),"area":['80%','100%']});
                                        }else{
                                            layer.msg(e['errMsg']);
                                        }
                                    }catch(err){
                                        layer.msg(err.message);
                                    }
                                });
                            }
                            });
                            $("#all_c").click(function(e){
                                $("input.ckeys").prop('checked','true');
                            });
                            $("select[keys='true']").append(`<option value='null'>请选择</option>`);
                            for(key in keys){
                                $("select[keys='true']").append(`<option>${keys[key]}</option>`);
                            }
                            $("select[keys='true']").change(function(e){
                                $(`#${$(e.target).attr('v_name')}`).val($(e.target).val());
                            });
                        });

                        $("#nav-top-api-menu-olss").click(function(e){
                            s_cont="";
                            for(key in keys){
                                if(keys_t[keys[key]].match(/(i|f)/)){
                                    s_cont+=`<input type='checkbox' value='${keys[key]}' class='ckeys'>${keys[key]}</option><br>`;
                                }
                            }
                            layer.open({title:"多次OLS",content:`
                            <div>
                                请输入OLS的次数: <input id='olss_count' oninput="value=value.match(/[1-9]/)">
                            </div>
                            `,
                            yes:function(index){
                                layer.close(index);
                                layer.open({title:"多次OLS",content:olss_query(parseInt($("#olss_count").val())),
                                yes:function(ind){
                                    olss_query_analyse();
                                    call_api("olss",function(e){
                                        if(e['respCode']==0){
                                            layer.close(ind);
                                            eee=Json2Table_olss(e['respData']);
                                            layer.open({type:1,title:false,"content":eee});
                                        }else{
                                            layer.msg(e['errMsg']);
                                        }
                                    })
                                }
                            });
                                $("button.all_c").click(e=>{$(`input[olss-arge=${$(e.target).attr('olss')}]`).prop('checked','true')});
                            }
                            });
                        });

                        $("#nav-top-api-menu-olsse").click(function(e){
                            s_cont="";
                            for(key in keys){
                                if(keys_t[keys[key]].match(/(i|f)/)){
                                    s_cont+=`<input type='checkbox' value='${keys[key]}' class='ckeys'>${keys[key]}</option><br>`;
                                }
                            }
                            layer.open({title:"OLS(面板固定效应)",content:`
                            <div>
                                请输入OLS的次数: <input id='olsse_count' oninput="value=value.match(/[1-9]/)"><br><br>
                                选择时间变量:<select id='time_var' keys='true'></select><br><br>
                                选择个体变量:<select id='entity_var' keys='true'></select>
                            </div>
                            `,
                            yes:function(index){
                                layer.close(index);
                                x4=[$("#entity_var").val(),$("#time_var").val()];
                                layer.open({title:"OLS(面板固定效应)",content:olsse_query(parseInt($("#olsse_count").val()),x4),
                                yes:function(ind){
                                    olsse_query_analyse();
                                    call_api("olsse",function(e){
                                        if(e['respCode']==0){
                                            layer.close(ind);
                                            eee=Json2Table_olsse(e['respData']);
                                            layer.open({type:1,title:false,"content":eee});
                                        }else{
                                            layer.msg(e['errMsg']);
                                        }
                                    })
                                }
                            });
                                $("button.all_c").click(e=>{$(`input[olss-arge=${$(e.target).attr('olss')}]`).prop('checked','true')});
                            }
                            });
                            $("select[keys='true']").append(`<option value='null'>请选择</option>`);
                            for(key in keys){
                                $("select[keys='true']").append(`<option>${keys[key]}</option>`);
                            }
                        });

                        $("#nav-top-api-menu-probit").click(function(e){
                            s_cont="";
                            for(key in keys){
                                s_cont+=`<input type='checkbox' value='${keys[key]}' class='ckeys'>${keys[key]}</option><br>`;
                            }
                            layer.open({title:"Probit接口",content:`
                            <div>
                            选择被解释变量(要求二值,如性别):<select keys='true' id='explain_v2' v_name='argu2'></select><br><br>
                            选择解释变量:<button id='all_c'>全选</button><br><div id='explain' keys='true'>${s_cont}</div>
                            </div>
                            `,
                            yes:function(index){
                                x2=[];
                                $("input.ckeys:checked").each(function(){
                                    x2.push($(this).val());
                                });
                                $("#argu1").val(JSON.stringify(x2));
                                call_api("probit",function(e){
                                    try{
                                        if(e['respCode']==0){
                                            layer.close(index);
                                            layer.open({"title":"Probit分析结果","content":e['respData']['s_text'].replace(/\n/g,"<br>").replace(/ /g,"&nbsp;"),"area":['80%','100%']});
                                        }else{
                                            layer.msg(e['errMsg']);
                                        }
                                    }catch(err){
                                        layer.msg(err.message);
                                    }
                                });
                            }
                            });
                            $("#all_c").click(function(e){
                                $("input.ckeys").prop('checked','true');
                            });
                            $("select[keys='true']").append(`<option value='null'>请选择</option>`);
                            for(key in keys){
                                $("select[keys='true']").append(`<option>${keys[key]}</option>`);
                            }
                            $("select[keys='true']").change(function(e){
                                $(`#${$(e.target).attr('v_name')}`).val($(e.target).val());
                            });
                        });

                        $("#nav-top-api-menu-logit").click(function(e){
                            s_cont="";
                            for(key in keys){
                                s_cont+=`<input type='checkbox' value='${keys[key]}' class='ckeys'>${keys[key]}</option><br>`;
                            }
                            layer.open({title:"Logit接口",content:`
                            <div>
                            选择被解释变量(要求二值,如性别):<select keys='true' id='explain_v2' v_name='argu2'></select><br><br>
                            选择解释变量:<button id='all_c'>全选</button><br><div id='explain' keys='true'>${s_cont}</div>
                            </div>
                            `,
                            yes:function(index){
                                x2=[];
                                $("input.ckeys:checked").each(function(){
                                    x2.push($(this).val());
                                });
                                $("#argu1").val(JSON.stringify(x2));
                                call_api("logit",function(e){
                                    try{
                                        if(e['respCode']==0){
                                            layer.close(index);
                                            layer.open({"title":"Logit分析结果","content":e['respData']['s_text'].replace(/\n/g,"<br>").replace(/ /g,"&nbsp;"),"area":['80%','100%']});
                                        }else{
                                            layer.msg(e['errMsg']);
                                        }
                                    }catch(err){
                                        layer.msg(err.message);
                                    }
                                });
                            }
                            });
                            $("#all_c").click(function(e){
                                $("input.ckeys").prop('checked','true');
                            });
                            $("select[keys='true']").append(`<option value='null'>请选择</option>`);
                            for(key in keys){
                                $("select[keys='true']").append(`<option>${keys[key]}</option>`);
                            }
                            $("select[keys='true']").change(function(e){
                                $(`#${$(e.target).attr('v_name')}`).val($(e.target).val());
                            });
                        });

                        $("#nav-top-api-menu-corr").click(function(e){
                            layer.open({title:"相关系数接口",content:`
                            <div>选择变量1:<select keys='true' id='explain_v1' v_name='argu1'></select><br><br>
                            选择变量2:<select keys='true' id='explain_v2' v_name='argu2'></select><br>
                            </div>
                            `,
                            yes:function(index){
                                call_api("corr",function(e){
                                    try{
                                        if(e['respCode']==0){
                                            layer.close(index);
                                            estr=`变量1:${$("#argu1").val()}<br>变量2:${$("#argu2").val()}<br>相关系数:${e['respData']['Significance'][0]}<br>显著性:${e['respData']['Significance'][1]}`;
                                            layer.open({title:"相关系数分析结果",content:estr});
                                        }else{
                                            layer.msg(e['errMsg']);
                                        }
                                    }catch(err){
                                        layer.msg(err.message);
                                    }
                                });
                            }
                            });
                            $("select[keys='true']").append(`<option value='null'>请选择</option>`);
                            for(key in keys){
                                $("[keys='true']").append(`<option>${keys[key]}</option>`);
                            }
                            $("[keys='true']").change(function(e){
                                $(`#${$(e.target).attr('v_name')}`).val($(e.target).val());
                            });
                        });


                    }else{
                        $("#nav-top-api-menu").show();
                    }
                });

                $("#nav-top-more").click(function(e){
                    $(".nav-top-option-menu").hide();
                    if($("#nav-top-more-menu").length==0){
                        $("body").append(`<div id='nav-top-more-menu' class='nav-top-option-menu'></div>`);
                        $("#nav-top-more-menu").css({"top":$("#nav-top").height(),"left":$(e.target).offset().left});
                        $("#nav-top-more-menu").append(`<div id='nav-top-more-menu-about' class='nav-top-option-menu-in'>关于CE</div>`);
                        $("#nav-top-more-menu").append(`<div id='nav-top-more-menu-apidoc' class='nav-top-option-menu-in'>API文档</div>`);
                        $("#nav-top-more-menu").append(`<div id='nav-top-more-menu-bug' class='nav-top-option-menu-in'>问题反馈</div>`);
                        $("#nav-top-more-menu").mouseleave(function(e){
                            $("#nav-top-more-menu").hide();
                        });
                        $("#nav-top-more-menu-about").click(function(){
                            copyright();
                        });
                        $("#nav-top-more-menu-apidoc").click(function(){
                            layer.open({type:2,content:"https://www.apifox.cn/apidoc/shared-b79d3f14-e20a-4a46-ab68-9e8beabcf077/doc-434951",title:"API文档",area:['80%','100%']})
                        });
                        $("#nav-top-more-menu-bug").click(function(){
                            layer.open({type:2,content:"https://www.wjx.cn/vj/wW0cmkm.aspx",title:"问题反馈",area:['80%','100%']})
                        });
                    }else{
                        $("#nav-top-more-menu").show();
                    }
                });

                $("#nav-top-edit").click(function(e){
                    $(".nav-top-option-menu").hide();
                    if($("#nav-top-edit-menu").length==0){
                        $("body").append(`<div id='nav-top-edit-menu' class='nav-top-option-menu'></div>`);
                        $("#nav-top-edit-menu").css({"top":$("#nav-top").height(),"left":$(e.target).offset().left});
                        $("#nav-top-edit-menu").append(`<div id='nav-top-edit-menu-SelectSimple' class='nav-top-option-menu-in'>简单筛选</div>`);
                        $("#nav-top-edit-menu").append(`<div id='nav-top-edit-menu-SelectAdvance' class='nav-top-option-menu-in'>高级筛选(SQL)</div>`);
                        $("#nav-top-edit-menu").append(`<div id='nav-top-edit-menu-loss2' class='nav-top-option-menu-in'>缺失值处理</div>`);
                        $("[debug=true]").click(function(e){
                            layer.msg($(e.target).html()+"接口正在开发中,暂时不可使用!");
                        });
                        $("#nav-top-edit-menu").mouseleave(function(e){
                            $("#nav-top-edit-menu").hide();
                        });
                        $("#nav-top-edit-menu-loss2").click(function(e){
                            s_cont="";
                            for(key in keys){
                                s_cont+=`<input type='checkbox' value='${keys[key]}' class='ckeys' class='magic-radio'>${keys[key]}<br>`;
                            }
                            layer.open({title:"缺失值处理",content:`
                            <div>选择删去缺失值的变量:<button id='all_c'>全选</button><br><div id='explain' keys='true'>${s_cont}</div>
                            </div>
                            `,
                            yes:function(ind){
                                x3=[];
                                $("input.ckeys:checked").each(function(){
                                    x3.push($(this).val());
                                });
                                v1="";
                                for(i=0;i<x3.length-1;i++){
                                    v1+=x3[i]+" is not null AND ";
                                }
                                v1+=x3[x3.length-1]+" is not null";
                                $("#argu1").val(v1);
                                layer.close(ind);
                                table2_show("select_simple");
                            }});
                            $("#all_c").click(function(e){
                                $("input.ckeys").prop('checked','true');
                            });
                        });
                        $("#nav-top-edit-menu-SelectAdvance").click(function(e){
                            $("#argu1,#argu2").val("");
                            layer.open({title:"高级语句筛选",content:`
                            <div>查询语句:<br><input type='text' keys='true' id='explain_v1' v_name='argu1' value='SELECT ...'></input><br>
                                FROM YOUR_TABLE <br>
                                <input type='text' keys='true' id='explain_v2' v_name='argu2' value='WHERE 1=1'></input><br><br>基于SQLite3
                            </div>
                            `,
                            yes:function(index){
                                layer.close(index);
                                table2_show("select_advance");
                            }
                            });
                            $("[keys='true']").change(function(e){
                                $(`#${$(e.target).attr('v_name')}`).val($(e.target).val());
                            });
                        });
                        $("#nav-top-edit-menu-SelectSimple").click(function(e){
                            $("#argu1,#argu2").val("");
                            layer.open({title:"简单语句筛选",content:`
                            <div>查询语句:<br>WHERE <input type='text' keys='true' id='explain_v1' v_name='argu1'></input><br>
                            </div>
                            `,
                            yes:function(index){
                                layer.close(index);
                                table2_show("select_simple");
                            }
                            });
                            $("[keys='true']").change(function(e){
                                $(`#${$(e.target).attr('v_name')}`).val($(e.target).val());
                            });
                        });
                    }else{
                        $("#nav-top-edit-menu").show();
                    }
                });

                $("#nav-top-api2").click(function(e){
                    $(".nav-top-option-menu").hide();
                    if($("#nav-top-api2-menu").length==0){
                        $("body").append(`<div id='nav-top-api2-menu' class='nav-top-option-menu'></div>`);
                        $("#nav-top-api2-menu").css({"top":$("#nav-top").height(),"left":$(e.target).offset().left});
                        $("#nav-top-api2-menu").append(`<div id='nav-top-api2-menu-mean' class='nav-top-option-menu-in'>均值估计</div>`);
                        $("#nav-top-api2-menu").append(`<div id='nav-top-api2-menu-var' class='nav-top-option-menu-in'>方差估计</div>`);
                        //$("#nav-top-api2-menu").append(`<div id='nav-top-api2-menu-mean2' class='nav-top-option-menu-in'>均值差估计</div>`);
                        $("#nav-top-api2-menu").append(`<div id='nav-top-api2-menu-var2' class='nav-top-option-menu-in'>方差比估计(F)</div><hr>`);
                        $("#nav-top-api2-menu").append(`<div id='nav-top-api2-menu-meant' class='nav-top-option-menu-in'>均值检验(T-test)</div>`);
                        $("#nav-top-api2-menu").append(`<div id='nav-top-api2-menu-kst' class='nav-top-option-menu-in'>同分布检验(KS-test)</div>`);
                        $("#nav-top-api2-menu").append(`<div id='nav-top-api2-menu-normt' class='nav-top-option-menu-in'>正态性检验(Normal-test)</div>`);
                        $("#nav-top-api2-menu").append(`<div id='nav-top-api2-menu-chit' class='nav-top-option-menu-in'>独立性检验(Chi-test)</div>`);
                        $("#nav-top-api2-menu").append(`<div id='nav-top-api2-menu-vart' class='nav-top-option-menu-in'>方差齐性检验(Levene-test)</div>`);
                        $("#nav-top-api2-menu").append(`<div id='nav-top-api2-menu-anova' class='nav-top-option-menu-in'>方差分析(ANOVA)</div>`);
                        $("#nav-top-api2-menu").mouseleave(function(e){
                            $("#nav-top-api2-menu").hide();
                        });

                        $("#nav-top-api2-menu-mean").click(function(aim){
                            let func=function(e){
                                estr=`估计项: 均值<br>估计方法: ${e['respData']['method']}<br>置信水平: ${e['respData']['c-level']}<br>置信区间: [${e['respData']['interval'][0].toFixed(3)},${e['respData']['interval'][1].toFixed(3)}]`;
                                layer.open({title:"均值估计结果",content:estr});
                            }
                            api_std(aim,`
                            <div>选择变量:<select keys='true' id='explain_v1' v_name='argu1'></select><br><br>
                            置信水平:<input oninput="value=value.match(/-?[0-9]*\.?[0-9]*/)" keys='true' id='explain_v2' v_name='argu2' placeholder='0.95'><br>
                            </div>
                            `,"est_mean",func);
                        });

                        $("#nav-top-api2-menu-var").click(function(aim){
                            let func=function(e){
                                estr=`估计项: 方差<br>估计方法: ${e['respData']['method']}<br>置信水平: ${e['respData']['c-level']}<br>置信区间: [${e['respData']['interval'][0].toFixed(3)},${e['respData']['interval'][1].toFixed(3)}]`;
                                layer.open({title:"方差估计结果",content:estr});
                            }
                            api_std(aim,`
                            <div>选择变量:<select keys='true' id='explain_v1' v_name='argu1'></select><br><br>
                            置信水平:<input oninput="value=value.match(/-?[0-9]*\.?[0-9]*/)" keys='true' id='explain_v2' v_name='argu2' placeholder='0.95'><br>
                            </div>
                            `,"est_var",func);
                        });

                        $("#nav-top-api2-menu-var2").click(function(aim){
                            let func=function(e){
                                estr=`估计项: 方差比值<br>估计方法: ${e['respData']['method']}<br>置信水平: ${e['respData']['c-level']}<br>置信区间: [${e['respData']['interval'][0].toFixed(3)},${e['respData']['interval'][1].toFixed(3)}]`;
                                layer.open({title:"方差比估计结果",content:estr});
                            }
                            let f2=function(){
                                x3=[];
                                x3[0]=$("#explain-v1").val();
                                x3[1]=$("#explain-v3").val();
                                $("#argu1").val(JSON.stringify(x3));
                            };
                            api_std(aim,`
                            <div>选择变量1: <select keys='true' id='explain-v1' v_name='argu1'></select><br><br>
                                选择变量2: <select keys='true' id='explain-v3'></select><br><br>
                            置信水平:<input oninput="value=value.match(/-?[0-9]*\.?[0-9]*/)" keys='true' id='explain-v2' v_name='argu2' placeholder='0.95'><br>
                            </div>
                            `,"est_varr",func,f2);
                        });

                        $("#nav-top-api2-menu-meant").click(function(aim){
                            let func=function(e){
                                estr="";
                                for (k in e['respData']){
                                    estr+=`${k}:${e['respData'][k]}<br>`;
                                }
                                layer.open({title:"均值检验分析结果",content:estr});
                            }
                            api_std(aim,`
                            <div>选择变量1:<select keys='true' id='explain_v1' v_name='argu1'></select><br><br>
                            选择变量2:<select keys='true' id='explain_v2' v_name='argu2'></select><br>
                            </div>
                            `,"test_ks",func);
                        });

                        $("#nav-top-api2-menu-anova").click(function(aim){
                            let func=function(e){
                                estr="";
                                for (k in e['respData']){
                                    estr+=`${k}:${e['respData'][k]}<br>`;
                                }
                                layer.open({title:"ANOVA分析结果",content:estr});
                            }
                            api_std(aim,`
                            <div>选择数值变量:<select keys='true' id='explain_v1' v_name='argu1'></select><br><br>
                            选择分类变量:<select keys='true' id='explain_v2' v_name='argu2'></select><br>
                            </div>
                            `,"test_anova",func);
                        });

                        $("#nav-top-api2-menu-vart").click(function(aim){
                            let func=function(e){
                                estr="";
                                for (k in e['respData']){
                                    estr+=`${k}:${e['respData'][k]}<br>`;
                                }
                                layer.open({title:"方差齐性分析结果",content:estr});
                            }
                            api_std(aim,`
                            <div>选择数值变量:<select keys='true' id='explain_v1' v_name='argu1'></select><br><br>
                            选择分类变量:<select keys='true' id='explain_v2' v_name='argu2'></select><br>
                            </div>
                            `,"test_std",func);
                        });

                        $("#nav-top-api2-menu-normt").click(function(aim){
                            let func=function(e){
                                estr="";
                                for (k in e['respData']){
                                    estr+=`${k}:${e['respData'][k]}<br>`;
                                }
                                layer.open({title:"正态性检验分析结果",content:estr});
                            }
                            api_std(aim,`
                            <div>选择变量:<select keys='true' id='explain_v1' v_name='argu1'></select><br>
                            </div>
                            `,"test_norm",func);
                        });

                        $("#nav-top-api2-menu-kst").click(function(aim){
                            let func=function(e){
                                estr="";
                                for (k in e['respData']){
                                    estr+=`${k}:${e['respData'][k]}<br>`;
                                }
                                layer.open({title:"K-S检验分析结果",content:estr});
                            }
                            api_std(aim,`
                            <div>选择变量1:<select keys='true' id='explain_v1' v_name='argu1'></select><br><br>
                            选择变量2:<select keys='true' id='explain_v2' v_name='argu2'></select><br>
                            </div>
                            `,"test_ks",func);
                        });

                    }else{
                        $("#nav-top-api2-menu").show();
                    }
                });

                $("#nav-top-api3").click(function(e){
                    $(".nav-top-option-menu").hide();
                    if($("#nav-top-api3-menu").length==0){
                        $("body").append(`<div id='nav-top-api3-menu' class='nav-top-option-menu'></div>`);
                        $("#nav-top-api3-menu").css({"top":$("#nav-top").height(),"left":$(e.target).offset().left});
                        $("#nav-top-api3-menu").append(`<div id='nav-top-api3-menu-tworeg' class='nav-top-option-menu-in'>一次散点拟合图</div>`);
                        $("#nav-top-api3-menu").append(`<div id='nav-top-api3-menu-tworeg2' class='nav-top-option-menu-in'>二次散点拟合图</div>`);
                        $("#nav-top-api3-menu").append(`<div id='nav-top-api3-menu-heterreg' class='nav-top-option-menu-in'>异质性散点拟合图</div>`);
                        $("#nav-top-api3-menu").append(`<div id='nav-top-api3-menu-typebar' class='nav-top-option-menu-in'>分类均值柱状图</div><hr>`);
                        $("#nav-top-api3-menu").append(`<div id='nav-top-api3-menu-qq' class='nav-top-option-menu-in'>QQ-Plot</div>`);
                        $("#nav-top-api3-menu").append(`<div id='nav-top-api3-menu-cdf' class='nav-top-option-menu-in'>累计分布图</div>`);
                        $("#nav-top-api3-menu").append(`<div id='nav-top-api3-menu-advance' class='nav-top-option-menu-in'>高级绘图接口(ggplot2)</div>`);

                        $("#nav-top-api3-menu-tworeg").click(function(aim){
                            img_std(aim,`
                            <div>选择解释变量:<select keys='true' id='explain_v1' v_name='argu1'></select><br><br>
                            选择被解释变量:<select keys='true' id='explain_v2' v_name='argu2'></select><br>
                            </div>
                            `,"dimg_regress");
                        });

                        $("#nav-top-api3-menu-tworeg2").click(function(aim){
                            img_std(aim,`
                            <div>选择解释变量:<select keys='true' id='explain_v1' v_name='argu1'></select><br><br>
                            选择被解释变量:<select keys='true' id='explain_v2' v_name='argu2'></select><br>
                            </div>
                            `,"dimg_regress_d2");
                        });

                        $("#nav-top-api3-menu-typebar").click(function(aim){
                            img_std(aim,`
                            <div>选择求均值变量:<select keys='true' id='explain_v1' v_name='argu1'></select><br><br>
                            选择分类变量:<select keys='true' id='explain_v2' v_name='argu2'></select><br>
                            </div>
                            `,"dimg_bar_type");
                        });

                        $("#nav-top-api3-menu-heterreg").click(function(aim){
                            img_std(aim,`
                            <div>选择解释变量:<select keys='true' id='explain_v1' v_name='argu1'></select><br><br>
                            选择被解释变量:<select keys='true' id='explain_v2' v_name='argu2'></select><br><br>
                            选择门槛变量:<select keys='true' id='explain_v3' v_name='argu_type'></select><br><br>
                            输入门槛划分值:<input keys='true' id='explain_v4' v_name='segment'>
                            </div>
                            `,"dimg_hetero_regress");
                        });

                        $("#nav-top-api3-menu-qq").click(function(aim){
                            img_std(aim,`
                            <div>选择变量:<select keys='true' id='explain_v1' v_name='argu1'></select><br>
                            </div>
                            `,"dimg_qq");
                        });

                        $("#nav-top-api3-menu-cdf").click(function(aim){
                            img_std(aim,`
                            <div>选择变量:<select keys='true' id='explain_v1' v_name='argu1'></select><br>
                            </div>
                            `,"dimg_cdf");
                        });

                        $("#nav-top-api3-menu-advance").click(function(e){
                            layer.open({title:$(e.target).html(),content:`
                            <div>作图命令(ggplot2格式,数据集名为dta): <br><textarea style='border:0;border-radius:5px;background-color:rgba(241,241,241,.98);width: 355px;height: 100px;padding: 10px;resize: none;' keys='true' id='explain_v1' v_name='argu1' value='ggplot(dta,aes())+...' style='width:600px;height:350px' spellcheck="false">ggplot(dta,aes())+...</textarea><br>
                            </div>
                            `,
                            yes:function(e){
                                call_img("dimg_advance");
                            }
                            });
                            $("[keys='true']").change(function(e){
                                $(`#${$(e.target).attr('v_name')}`).val($(e.target).val());
                            });
                        });
                        

                        $("#nav-top-api3-menu").mouseleave(function(e){
                            $("#nav-top-api3-menu").hide();
                        });


                    }else{
                        $("#nav-top-api3-menu").show();
                    }
                });

                $("body").contextmenu(function(e){
                    e.preventDefault();
                });

                $("#logo,#text0").click(function(e){
                    copyright();
                });

            });
        </script>
        <style type="text/css">
            @media print{
                .Noprint {
                display:none;   
            }
            #nav-top{
                display:none;
            }
            .NextPage {   
                page-break-after:always;   
            } 
            }
            body{
                font-family: "Times New Roman",Times,serif;
                margin: 0px;
                background: cornsilk;
            }
            div#l0{
                position: absolute;
                text-align: center;
                display: table;
                background-color: grey;
                background-image: linear-gradient(#e66465, #9198e5);
                left: 0%;
                top:0%;
                height: 100%;
                width:60%;
            }
            div#text0{
                position: absolute;
                text-align: center;
                width: 100%;
                display: table-cell;
                font-size: 30px;
                top:80%;
                color:rgb(36, 34, 34);
            }
            img#ico0{
                position: relative;
                transform: translate(0,20%);
                transition-duration: 1s;
                width: 50%;
            }
            #ico0:hover{
                transition-duration: 1s;
                transform: rotate(7deg);
            }
            div#l1{
                position: absolute;
                background: cornsilk;
                left: 60%;
                width: 40%;
                height: 100%;
                text-align: center;
            }
            #text2{
                margin-top: 30%;
                font-size: 30px;
            }
            #go1{
                position: relative;
                transform: translate(-50%,0);
                line-height: 40px;
                margin-top:30%;
                width: 200px;
                height: 40px;
                left: 50%;
                color: white;
                background: rgb(75, 75, 232);
                border-radius: 20px;
                user-select: none;
                -webkit-user-select: none;
                cursor: default;
            }
            #go1:hover{
                background: rgb(103, 103, 232);
            }
            #go1:active{
                background:rgb(55, 55, 237);
            }
            #jdt{
                position: relative;
                left: 50%;
                background: #9198e5;
                transform: translate(-50%,0);
                border-radius: 5px;
                width: 80%;
                height: 10px;
            }
            #jdt2{
                position: relative;
                width: 0%;
                transition-duration: 0.3s;
                background: #e66465;
                height: 100%;
                border-radius: 5px;
            }
            [step="1"]{
                transition-duration: 0.5s;
                user-select: none;
                -webkit-user-select: none;
                cursor: default;
            }
            #nav-left{
                position: absolute;

                color: white;
                line-height: 40px;
                width: 20%;
                background:darkcyan;
                height: calc(100% - 30px);
                top:30px;
                overflow: scroll;
            }
            ::-webkit-scrollbar {
                display: none; /* Chrome Safari */
            }
            #table-main{
                overflow: scroll;
                position: absolute;
                width: 80%;
                left: 20%;
                height: calc(100% - 30px);
                top:30px;
            }
            #nav-top{
                line-height: 30px;
                color: white;
                font-size: 15px;
                position: relative;
                z-index: 1;
                width: 100%;
                top:0%;
                padding-left: 20px;
                height: 30px;
                background: rgb(63, 63, 235);
            }
            table.corrtable{
                text-align: center;
            }
            table.gridtable {
                page-break-after:always;
                font-family: verdana,arial,sans-serif;
                font-size:12px;
                color:#333333;
                border-width: 1px;
                border-color: #666666;
                border-collapse: collapse;
            }
            table.gridtable th {
                border-width: 1px;
                user-select: none;
                -webkit-user-select: none;
                cursor: s-resize;
                padding: 8px;
                border-style: solid;
                border-color: #666666;
                background-color: #dedede;
            }
            table.gridtable th:hover{
                background-color: #4b4b4b;
            }
            table.gridtable td {
                border-width: 1px;
                padding: 8px;
                border-style: solid;
                border-color: #666666;
                background-color: #ffffff;
            }
            #default-info{
                padding-left: 5px;
            }
            div.nav-top-option{
                line-height: 30px;
                display: inline-block;
                text-align: center;
                padding-left: 15px;
                padding-right: 15px;
                height: 100%;
                user-select: none;
                -webkit-user-select: none;
                cursor: default;
            }
            div.nav-top-option:hover{
                background: gainsboro;
            }
            div.nav-top-option:active{
                background: rgb(183, 182, 182);
            }
            .nav-top-option-menu{
                user-select: none;
                -webkit-user-select: none;
                position: absolute;
                width:200px;
                background: rgb(170, 238, 191);
                overflow: hidden;
                box-shadow: 1px 1px 1px 0.5px grey;
                cursor: default;
            }
            .nav-top-option-menu-in{
                position: relative;
                margin-bottom: 5px;
                width: 100%;
                height: 30px;
                font-size: 14px;
                line-height: 30px;
                padding-left: 10px;
            }
            .nav-top-option-menu-in:hover{
                background: #9198e5;
            }
            input{
                border: 1px solid #ccc;
                padding: 7px 0px;
                border-radius: 3px;
                padding-left:5px;
                margin-left: 5px;
                -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
                box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
                -webkit-transition: border-color ease-in-out .15s,-webkit-box-shadow ease-in-out .15s;
                -o-transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;
                transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s
            }
            input:focus{
                    border-color: #66afe9;
                    outline: 0;
                    -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgba(102,175,233,.6);
                    box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgba(102,175,233,.6)
            }
            select{  
                background:#fafdfe;  
                margin-left: 5px;
                height:28px;  
                width:180px;  
                line-height:28px;  
                border:1px solid #9bc0dd;  
                -moz-border-radius:2px;  
                -webkit-border-radius:2px;  
                border-radius:2px;  
            }  
        </style>
        <style>
            @keyframes hover-color {
            from {
                border-color: #c0c0c0; }
            to {
                border-color: #3e97eb; } }

            .magic-radio,
            .magic-checkbox {
            position: absolute;
            display: none; }

            .magic-radio[disabled],
            .magic-checkbox[disabled] {
            cursor: not-allowed; }

            .magic-radio + label,
            .magic-checkbox + label {
            position: relative;
            display: block;
            padding-left: 30px;
            cursor: pointer;
            vertical-align: middle; }
            .magic-radio + label:hover:before,
            .magic-checkbox + label:hover:before {
                animation-duration: 0.4s;
                animation-fill-mode: both;
                animation-name: hover-color; }
            .magic-radio + label:before,
            .magic-checkbox + label:before {
                position: absolute;
                top: 0;
                left: 0;
                display: inline-block;
                width: 20px;
                height: 20px;
                content: '';
                border: 1px solid #c0c0c0; }
            .magic-radio + label:after,
            .magic-checkbox + label:after {
                position: absolute;
                display: none;
                content: ''; }

            .magic-radio[disabled] + label,
            .magic-checkbox[disabled] + label {
            cursor: not-allowed;
            color: #e4e4e4; }
            .magic-radio[disabled] + label:hover, .magic-radio[disabled] + label:before, .magic-radio[disabled] + label:after,
            .magic-checkbox[disabled] + label:hover,
            .magic-checkbox[disabled] + label:before,
            .magic-checkbox[disabled] + label:after {
                cursor: not-allowed; }
            .magic-radio[disabled] + label:hover:before,
            .magic-checkbox[disabled] + label:hover:before {
                border: 1px solid #e4e4e4;
                animation-name: none; }
            .magic-radio[disabled] + label:before,
            .magic-checkbox[disabled] + label:before {
                border-color: #e4e4e4; }

            .magic-radio:checked + label:before,
            .magic-checkbox:checked + label:before {
            animation-name: none; }

            .magic-radio:checked + label:after,
            .magic-checkbox:checked + label:after {
            display: block; }

            .magic-radio + label:before {
            border-radius: 50%; }

            .magic-radio + label:after {
            top: 7px;
            left: 7px;
            width: 8px;
            height: 8px;
            border-radius: 50%;
            background: #3e97eb; }

            .magic-radio:checked + label:before {
            border: 1px solid #3e97eb; }

            .magic-radio:checked[disabled] + label:before {
            border: 1px solid #c9e2f9; }

            .magic-radio:checked[disabled] + label:after {
            background: #c9e2f9; }

            .magic-checkbox + label:before {
            border-radius: 3px; }

            .magic-checkbox + label:after {
            top: 2px;
            left: 7px;
            box-sizing: border-box;
            width: 6px;
            height: 12px;
            transform: rotate(45deg);
            border-width: 2px;
            border-style: solid;
            border-color: #fff;
            border-top: 0;
            border-left: 0; }

            .magic-checkbox:checked + label:before {
            border: #3e97eb;
            background: #3e97eb; }

            .magic-checkbox:checked[disabled] + label:before {
            border: #c9e2f9;
            background: #c9e2f9; }
        </style>
    </head>
    <body>
        <div id="l0" step="1">
            <div id="text0" hidden="true">CE Toolbox<br><span style="font-size: 20px;"></span></div>
            <img id="ico0" src="https://abxmc.live/CE/images/dta.svg">
        </div>
        <div id="l1" step="1">
            <div id="text1">
                <div id="text2">计算经济学<br>数据处理工具箱</div>
                
                <div id="go1">选择数据文件</div>
                <p>支持<strong>dta(推荐)/xls/xlsx/csv</strong>文件</p>
                <div id="jdt" hidden="true">
                    <div id="jdt2">

                    </div>
                </div>
                <div style="margin-top: 25px;" id="isuid"><a style="color: rgb(17, 70, 53);">已有UID?</a></div>
            </div>
        </div>
        <input type="file" id="file0" hidden="true">
        <input type="text" id="f_name" hidden="true">
        <form id="jk" style="margin-top: 10px;" hidden="true">
            <input type="text" id="uid" hidden="true" name="uid">
            <input type="text" id="f_suffix" hidden="true" name="f_suffix">
            <input type="text" placeholder="参数1" id="argu1" name="argu1">
            <input type="text" placeholder="参数2" id="argu2" name="argu2">
            <input type="text"  id="argu3" name="count">
            <input type="text" id="argu_type" name="argu_type">
            <input type="text" id="segment" name="segment">
        </form>
        <div>
            <div step="2" id="nav-top" hidden="true" class="Noprint">
                <div id="logo" style="display: inline-block;font-weight: bold;padding-right: 20px;user-select: none;cursor: default;-webkit-user-select: none;">CE Toolbox</div>
                <div id="nav-top-file" class="nav-top-option">文件</div>
                <div id="nav-top-edit" class="nav-top-option">编辑</div>
                <div id="nav-top-view" class="nav-top-option">视图</div>
                <div id="nav-top-api" class="nav-top-option">统计</div>
                <div id="nav-top-api2" class="nav-top-option">分析</div>
                <div id="nav-top-api3" class="nav-top-option">绘图</div>
                <div id="nav-top-more" class="nav-top-option">更多</div>
            </div>
            <div step="2" id="nav-left" hidden="true" class="Noprint">
                <div id="default-info">

                </div>
                <hr>
                <div id="nav-left-menu" style="padding-left: 5px;">
                    提示:右键列名查看更多选项<br>
                    您的每次操作最多显示前1000条数据<br>请您设置合理的排序方式和筛选条件<br>
                    <a href="https://www.apifox.cn/apidoc/shared-b79d3f14-e20a-4a46-ab68-9e8beabcf077/doc-453684" target="_blank">筛选语句帮助文档</a>
                </div>
    
            </div>
            <div step="2" id="table-main" hidden="true">
                <div id="wait-info">正在加载中....</div>
                <table class="gridtable" id="table1" hidden="true">
                    <thead id="table-main-head">
                        <th>T1</th>
                        <th>T2</th>
                    </thead>
                    <tbody id="table-main-body">
                        <tr>
                            <td>1</td>
                            <td>2</td>
                        </tr>
                        <tr>
                            <td>3</td>
                            <td>4</td>
                        </tr>
                    </tbody>
                </table>
                <table class="gridtable" id="table2" hidden="true">
                    <thead id="table-show-head">
                        <th>T1</th>
                        <th>T2</th>
                    </thead>
                    <tbody id="table-show-body">
                        <tr>
                            <td>1</td>
                            <td>2</td>
                        </tr>
                        <tr>
                            <td>3</td>
                            <td>4</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
        <a id="lhref" hidden="true">f</a>
        
    </body>
</html>